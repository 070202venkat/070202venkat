import pandas as pd import numpy as np

def load_data(file_path): """Loads CSV file containing training data.""" data = pd.read_csv(file_path) return data.values

def initialize_hypotheses(num_features): """Initializes the most specific and most general hypotheses.""" S = ['0'] * num_features  # Most specific hypothesis G = [['?'] * num_features]  # Most general hypothesis return S, G

def consistent_with_hypothesis(h, instance): """Checks if an instance is consistent with a hypothesis.""" return all(h[i] == '?' or h[i] == instance[i] for i in range(len(h)))

def candidate_elimination(data): """Implements the Candidate-Elimination algorithm.""" num_features = len(data[0]) - 1  # Last column is the class label S, G = initialize_hypotheses(num_features)

for instance in data:
    x, label = instance[:-1], instance[-1]
    if label == 'Yes':  # Positive example
        # General-to-Specific: Update S
        for i in range(num_features):
            if S[i] == '0':
                S[i] = x[i]
            elif S[i] != x[i]:
                S[i] = '?'
        
        # Remove inconsistent hypotheses from G
        G = [g for g in G if consistent_with_hypothesis(g, x)]
    else:  # Negative example
        # Specific-to-General: Update G
        new_G = []
        for g in G:
            if not consistent_with_hypothesis(g, x):
                new_G.append(g)
            else:
                for i in range(num_features):
                    if g[i] == '?':
                        new_hypothesis = g[:]
                        new_hypothesis[i] = S[i] if S[i] != '?' else x[i]
                        new_G.append(new_hypothesis)
        G = new_G
    
    # Remove overly general hypotheses in G
    G = [g for g in G if any(consistent_with_hypothesis(g, S))]

return S, G

Example Usage

def main(): file_path = "training_data.csv"  # Replace with actual CSV file data = load_data(file_path) S_final, G_final = candidate_elimination(data)

print("Final Specific Hypothesis:", S_final)
print("Final General Hypotheses:", G_final)

if name == "main": main()

