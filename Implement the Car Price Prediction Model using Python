import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns from sklearn.model_selection import train_test_split from sklearn.preprocessing import StandardScaler from sklearn.linear_model import LinearRegression from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

Load dataset

df = pd.read_csv("car_data.csv")  # Replace with actual dataset file

Display first few rows

display(df.head())

Data Preprocessing

df.dropna(inplace=True)  # Remove missing values

Encoding categorical features

df = pd.get_dummies(df, drop_first=True)

Splitting features and target

X = df.drop("price", axis=1) y = df["price"]

Train-test split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

Feature Scaling

scaler = StandardScaler() X_train = scaler.fit_transform(X_train) X_test = scaler.transform(X_test)

Train Linear Regression Model

model = LinearRegression() model.fit(X_train, y_train)

Predictions

y_pred = model.predict(X_test)

Model Evaluation

mae = mean_absolute_error(y_test, y_pred) mse = mean_squared_error(y_test, y_pred) rmse = np.sqrt(mse) r2 = r2_score(y_test, y_pred)

print(f"MAE: {mae}") print(f"MSE: {mse}") print(f"RMSE: {rmse}") print(f"R2 Score: {r2}")

Visualization

plt.figure(figsize=(10,6)) sns.scatterplot(x=y_test, y=y_pred) plt.xlabel("Actual Prices") plt.ylabel("Predicted Prices") plt.title("Actual vs Predicted Car Prices") plt.show()

