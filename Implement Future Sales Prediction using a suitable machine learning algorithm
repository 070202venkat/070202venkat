import pandas as pd import numpy as np from sklearn.model_selection import train_test_split from sklearn.preprocessing import StandardScaler from sklearn.ensemble import RandomForestRegressor from sklearn.metrics import mean_absolute_error, mean_squared_error

Sample dataset (Replace with actual dataset)

data = { 'Month': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'Store': [1, 2, 1, 2, 1, 2, 1, 2, 1, 2], 'PreviousSales': [1000, 1500, 1200, 1700, 1300, 1800, 1400, 1900, 1500, 2000], 'Sales': [1100, 1600, 1250, 1750, 1350, 1850, 1450, 1950, 1550, 2100] }

df = pd.DataFrame(data)

Features and Target

X = df[['Month', 'Store', 'PreviousSales']] y = df['Sales']

Split dataset

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

Standardize features

scaler = StandardScaler() X_train = scaler.fit_transform(X_train) X_test = scaler.transform(X_test)

Train Random Forest Regressor model

model = RandomForestRegressor(n_estimators=100, random_state=42) model.fit(X_train, y_train)

Predict future sales

y_pred = model.predict(X_test)

Evaluate model

mae = mean_absolute_error(y_test, y_pred) mse = mean_squared_error(y_test, y_pred) print(f'Mean Absolute Error: {mae:.2f}') print(f'Mean Squared Error: {mse:.2f}')

